{"version":3,"file":"CustomPlugin.js","sourceRoot":"","sources":["../../src/struct/CustomPlugin.ts"],"names":[],"mappings":";;;;;;AAAA,sDAA8B;AAC9B,0BAAgC;AAGhC;;;;GAIG;AACH,MAAsB,YAAa,SAAQ,gBAAM;IAAjD;;QACE,SAAI,GAAG,cAAU,CAAC,MAAM,CAAC;IAS3B,CAAC;CAAA;AAVD,oCAUC;AAED;;;;;;;;;;;;GAYG;AAEH,kBAAe,YAAY,CAAC","sourcesContent":["import Plugin from \"./Plugin\";\nimport { PluginType } from \"..\";\nimport type { GuildMember, StageChannel, TextChannel, VoiceChannel } from \"discord.js\";\n\n/**\n * Custom Plugin\n * @extends Plugin\n * @abstract\n */\nexport abstract class CustomPlugin extends Plugin {\n  type = PluginType.CUSTOM;\n  abstract play(\n    voiceChannel: VoiceChannel | StageChannel,\n    url: string,\n    member: GuildMember,\n    textChannel: TextChannel | undefined,\n    skip: boolean,\n    unshift: boolean,\n  ): Promise<void>;\n}\n\n/**\n * This method will be executed if the url is validated.\n * @param {Discord.VoiceChannel|Discord.StageChannel} voiceChannel The voice channel will be joined\n * @param {string} url Validated url\n * @param {Discord.GuildMember} member Requested user\n * @param {Discord.TextChannel?} textChannel Default {@link Queue#textChannel}\n * @param {boolean} skip Skip the playing song (if exists) and play the added song/playlist instantly\n * @param {boolean} unshift Add the song/playlist to the beginning of the queue (after the playing song if exists)\n * @returns {Promise<void>}\n * @method play\n * @memberof CustomPlugin#\n * @abstract\n */\n\nexport default CustomPlugin;\n"]}