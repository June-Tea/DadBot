{"version":3,"file":"Playlist.js","sourceRoot":"","sources":["../../src/struct/Playlist.ts"],"names":[],"mappings":"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","sourcesContent":["import { DisTubeError, formatDuration } from \"..\";\nimport type ytpl from \"@distube/ytpl\";\nimport type { PlaylistInfo, Song } from \"..\";\nimport type { GuildMember, User } from \"discord.js\";\n\n/**\n * Class representing a playlist.\n * @prop {string} source Playlist source\n */\nexport class Playlist implements PlaylistInfo {\n  source: string;\n  member?: GuildMember;\n  user?: User;\n  songs: Song[];\n  name: string;\n  url?: string;\n  thumbnail?: string;\n  [x: string]: any;\n  /**\n   * Create a playlist\n   * @param {Song[]|PlaylistInfo} playlist Playlist\n   * @param {Discord.GuildMember} member Requested user\n   * @param {Object} properties Custom properties\n   */\n  constructor(playlist: Song[] | ytpl.result | PlaylistInfo, member?: GuildMember, properties: any = {}) {\n    if (typeof playlist !== \"object\") {\n      throw new DisTubeError(\"INVALID_TYPE\", [\"Array<Song>\", \"object\"], playlist, \"playlist\");\n    }\n    if (typeof properties !== \"object\") {\n      throw new DisTubeError(\"INVALID_TYPE\", \"object\", properties, \"properties\");\n    }\n    // FIXME\n    const info = playlist as any;\n    /**\n     * The source of the playlist\n     * @type {string}\n     */\n    this.source = (info.source || properties.source || \"youtube\").toLowerCase();\n    /**\n     * Playlist songs.\n     * @type {Array<Song>}\n     */\n    this.songs = Array.isArray(info) ? info : info.items || info.songs;\n    if (!Array.isArray(this.songs) || !this.songs.length) {\n      throw new DisTubeError(\"EMPTY_PLAYLIST\");\n    }\n    this._patchMember(member || info.member);\n    /**\n     * Playlist name.\n     * @type {string}\n     */\n    this.name =\n      info.name ||\n      info.title ||\n      (this.songs[0].name\n        ? `${this.songs[0].name} and ${this.songs.length - 1} more songs.`\n        : `${this.songs.length} songs playlist`);\n    /**\n     * Playlist URL.\n     * @type {string}\n     */\n    this.url = info.url || info.webpage_url;\n    /**\n     * Playlist thumbnail.\n     * @type {?string}\n     */\n    this.thumbnail = info.thumbnail?.url || info.thumbnail || this.songs[0].thumbnail;\n    for (const [key, value] of Object.entries(properties)) {\n      this[key] = value;\n    }\n  }\n\n  /**\n   * Playlist duration in second.\n   * @type {number}\n   */\n  get duration() {\n    return this.songs?.reduce((prev, next) => prev + (next.duration || 0), 0) || 0;\n  }\n\n  /**\n   * Formatted duration string `hh:mm:ss`.\n   * @type {string}\n   */\n  get formattedDuration() {\n    return formatDuration(this.duration);\n  }\n\n  /**\n   * @param {?Discord.GuildMember} [member] Requested user\n   * @private\n   * @returns {Playlist}\n   */\n  _patchMember(member?: GuildMember): Playlist {\n    if (member) {\n      /**\n       * User requested.\n       * @type {?Discord.GuildMember}\n       */\n      this.member = member;\n      /**\n       * User requested.\n       * @type {?Discord.User}\n       */\n      this.user = this.member?.user;\n    }\n    this.songs.map(s => s.constructor.name === \"Song\" && s._patchPlaylist(this, this.member));\n    return this;\n  }\n}\n\nexport default Playlist;\n"]}